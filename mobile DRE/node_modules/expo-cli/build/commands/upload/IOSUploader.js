'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LANGUAGES = undefined;

var _keys;

function _load_keys() {
  return _keys = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));
}

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _extends2;

function _load_extends() {
  return _extends2 = _interopRequireDefault(require('babel-runtime/helpers/extends'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var _getPrototypeOf;

function _load_getPrototypeOf() {
  return _getPrototypeOf = _interopRequireDefault(require('babel-runtime/core-js/object/get-prototype-of'));
}

var _classCallCheck2;

function _load_classCallCheck() {
  return _classCallCheck2 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));
}

var _possibleConstructorReturn2;

function _load_possibleConstructorReturn() {
  return _possibleConstructorReturn2 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));
}

var _createClass2;

function _load_createClass() {
  return _createClass2 = _interopRequireDefault(require('babel-runtime/helpers/createClass'));
}

var _inherits2;

function _load_inherits() {
  return _inherits2 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));
}

var _lodash;

function _load_lodash() {
  return _lodash = _interopRequireDefault(require('lodash'));
}

var _chalk;

function _load_chalk() {
  return _chalk = _interopRequireDefault(require('chalk'));
}

var _BaseUploader2;

function _load_BaseUploader() {
  return _BaseUploader2 = _interopRequireDefault(require('./BaseUploader'));
}

var _log;

function _load_log() {
  return _log = _interopRequireDefault(require('../../log'));
}

var _prompt;

function _load_prompt() {
  return _prompt = _interopRequireDefault(require('../../prompt'));
}

var _utils;

function _load_utils() {
  return _utils = require('./utils');
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PLATFORM = 'ios';

var APPLE_CREDS_QUESTIONS = [{
  type: 'input',
  name: 'appleId',
  message: 'What\'s your Apple ID?'
}, {
  type: 'password',
  name: 'appleIdPassword',
  message: 'Password?'
}];

var APP_NAME_TOO_LONG_MSG = 'An app name can\'t be longer than 30 characters.';
var APP_NAME_QUESTION = {
  type: 'input',
  name: 'appName',
  message: 'How would you like to name your app?',
  validate: function validate(appName) {
    if (!appName) {
      return 'Empty app name is not valid.';
    } else if (appName.length > 30) {
      return APP_NAME_TOO_LONG_MSG;
    } else {
      return true;
    }
  }
};

var LANGUAGES = exports.LANGUAGES = ['Brazilian Portuguese', 'Danish', 'Dutch', 'English', 'English_Australian', 'English_CA', 'English_UK', 'Finnish', 'French', 'French_CA', 'German', 'Greek', 'Indonesian', 'Italian', 'Japanese', 'Korean', 'Malay', 'Norwegian', 'Portuguese', 'Russian', 'Simplified Chinese', 'Spanish', 'Spanish_MX', 'Swedish', 'Thai', 'Traditional Chinese', 'Turkish', 'Vietnamese'];

var IOSUploader = function (_BaseUploader) {
  (0, (_inherits2 || _load_inherits()).default)(IOSUploader, _BaseUploader);
  (0, (_createClass2 || _load_createClass()).default)(IOSUploader, null, [{
    key: 'validateOptions',
    value: function validateOptions(options) {
      if (!LANGUAGES.includes(options.language)) {
        throw new Error('You must specify a supported language. Run expo upload:ios --help to see the list of supported languages.');
      }
    }
  }]);

  function IOSUploader(projectDir, options) {
    (0, (_classCallCheck2 || _load_classCallCheck()).default)(this, IOSUploader);
    return (0, (_possibleConstructorReturn2 || _load_possibleConstructorReturn()).default)(this, (IOSUploader.__proto__ || (0, (_getPrototypeOf || _load_getPrototypeOf()).default)(IOSUploader)).call(this, PLATFORM, projectDir, options));
  }

  (0, (_createClass2 || _load_createClass()).default)(IOSUploader, [{
    key: '_ensureExperienceIsValid',
    value: function _ensureExperienceIsValid(exp) {
      if (!(_lodash || _load_lodash()).default.has(exp, 'ios.bundleIdentifier')) {
        throw new Error('You must specify an iOS bundle identifier in app.json.');
      }
    }
  }, {
    key: '_getPlatformSpecificOptions',
    value: function () {
      var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee() {
        var appleIdCrentials, appName, otherOptions;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this._getAppleIdCredentials();

              case 2:
                appleIdCrentials = _context.sent;
                _context.next = 5;
                return this._getAppName();

              case 5:
                appName = _context.sent;
                otherOptions = (_lodash || _load_lodash()).default.pick(this.options, ['language', 'sku']);
                return _context.abrupt('return', (0, (_extends2 || _load_extends()).default)({}, appleIdCrentials, {
                  appName: appName
                }, otherOptions));

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function _getPlatformSpecificOptions() {
        return _ref.apply(this, arguments);
      }

      return _getPlatformSpecificOptions;
    }()
  }, {
    key: '_getAppleIdCredentials',
    value: function () {
      var _ref2 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2() {
        var appleCredsKeys, result, credsPresent, questions, answers;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                appleCredsKeys = ['appleId', 'appleIdPassword'];
                result = (_lodash || _load_lodash()).default.pick(this.options, appleCredsKeys);


                if (process.env.EXPO_APPLE_ID) {
                  result.appleId = process.env.EXPO_APPLE_ID;
                }
                if (process.env.EXPO_APPLE_ID_PASSWORD) {
                  result.appleIdPassword = process.env.EXPO_APPLE_ID_PASSWORD;
                }

                credsPresent = (_lodash || _load_lodash()).default.intersection((0, (_keys || _load_keys()).default)(result), appleCredsKeys);

                if (!(credsPresent.length !== appleCredsKeys.length)) {
                  _context2.next = 13;
                  break;
                }

                questions = APPLE_CREDS_QUESTIONS.filter(function (_ref3) {
                  var name = _ref3.name;
                  return !credsPresent.includes(name);
                });
                _context2.next = 9;
                return (0, (_prompt || _load_prompt()).default)(questions);

              case 9:
                answers = _context2.sent;
                return _context2.abrupt('return', (0, (_extends2 || _load_extends()).default)({}, result, { answers: answers }));

              case 13:
                return _context2.abrupt('return', result);

              case 14:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function _getAppleIdCredentials() {
        return _ref2.apply(this, arguments);
      }

      return _getAppleIdCredentials;
    }()
  }, {
    key: '_getAppName',
    value: function () {
      var _ref4 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee3() {
        var appName;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                appName = this.options.appName || this._exp.name;

                if (!(!appName || appName.length > 30)) {
                  _context3.next = 8;
                  break;
                }

                if (appName && appName.length > 30) {
                  (_log || _load_log()).default.error(APP_NAME_TOO_LONG_MSG);
                }
                _context3.next = 5;
                return this._askForAppName();

              case 5:
                return _context3.abrupt('return', _context3.sent);

              case 8:
                return _context3.abrupt('return', appName);

              case 9:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function _getAppName() {
        return _ref4.apply(this, arguments);
      }

      return _getAppName;
    }()
  }, {
    key: '_askForAppName',
    value: function () {
      var _ref5 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee4() {
        var _ref6, appName;

        return (_regenerator || _load_regenerator()).default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return (0, (_prompt || _load_prompt()).default)(APP_NAME_QUESTION);

              case 2:
                _ref6 = _context4.sent;
                appName = _ref6.appName;
                return _context4.abrupt('return', appName);

              case 5:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function _askForAppName() {
        return _ref5.apply(this, arguments);
      }

      return _askForAppName;
    }()
  }, {
    key: '_uploadToTheStore',
    value: function () {
      var _ref7 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee5(platformData, buildPath) {
        var fastlane, appleId, appleIdPassword, appName, language, bundleIdentifier, appleCreds;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                fastlane = this.fastlane;
                appleId = platformData.appleId, appleIdPassword = platformData.appleIdPassword, appName = platformData.appName, language = platformData.language;
                bundleIdentifier = this._exp.ios.bundleIdentifier;
                appleCreds = { appleId: appleId, appleIdPassword: appleIdPassword };


                (0, (_log || _load_log()).default)('Ensuring the app exists on App Store Connect, this may take a while...');
                _context5.next = 7;
                return (0, (_utils || _load_utils()).runFastlaneAsync)(fastlane.app_produce, [bundleIdentifier, appName, appleId, language], appleCreds);

              case 7:

                (0, (_log || _load_log()).default)('Uploading the app to Testflight, hold tight...');
                _context5.next = 10;
                return (0, (_utils || _load_utils()).runFastlaneAsync)(fastlane.pilot_upload, [buildPath, appleId], appleCreds, true);

              case 10:

                (0, (_log || _load_log()).default)('All done! You may want to go to App Store Connect (' + (_chalk || _load_chalk()).default.underline('https://appstoreconnect.apple.com') + ') and share your build with your testers.');

              case 11:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function _uploadToTheStore(_x, _x2) {
        return _ref7.apply(this, arguments);
      }

      return _uploadToTheStore;
    }()
  }]);
  return IOSUploader;
}((_BaseUploader2 || _load_BaseUploader()).default);

exports.default = IOSUploader;
//# sourceMappingURL=../../__sourcemaps__/commands/upload/IOSUploader.js.map

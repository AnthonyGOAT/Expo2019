{"version":3,"sources":["commands/upload/IOSUploader.js"],"names":["PLATFORM","APPLE_CREDS_QUESTIONS","type","name","message","APP_NAME_TOO_LONG_MSG","APP_NAME_QUESTION","validate","appName","length","LANGUAGES","IOSUploader","options","includes","language","Error","projectDir","exp","has","_getAppleIdCredentials","appleIdCrentials","_getAppName","otherOptions","pick","appleCredsKeys","result","process","env","EXPO_APPLE_ID","appleId","EXPO_APPLE_ID_PASSWORD","appleIdPassword","credsPresent","intersection","questions","filter","answers","_exp","error","_askForAppName","platformData","buildPath","fastlane","bundleIdentifier","ios","appleCreds","app_produce","pilot_upload","underline"],"mappings":"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","file":"../../../commands/upload/IOSUploader.js","sourcesContent":["import _ from 'lodash';\nimport chalk from 'chalk';\n\nimport BaseUploader from './BaseUploader';\nimport log from '../../log';\nimport prompt from '../../prompt';\nimport { runFastlaneAsync } from './utils';\n\nconst PLATFORM = 'ios';\n\nconst APPLE_CREDS_QUESTIONS = [\n  {\n    type: 'input',\n    name: 'appleId',\n    message: `What's your Apple ID?`,\n  },\n  {\n    type: 'password',\n    name: 'appleIdPassword',\n    message: 'Password?',\n  },\n];\n\nconst APP_NAME_TOO_LONG_MSG = `An app name can't be longer than 30 characters.`;\nconst APP_NAME_QUESTION = {\n  type: 'input',\n  name: 'appName',\n  message: 'How would you like to name your app?',\n  validate: appName => {\n    if (!appName) {\n      return 'Empty app name is not valid.';\n    } else if (appName.length > 30) {\n      return APP_NAME_TOO_LONG_MSG;\n    } else {\n      return true;\n    }\n  },\n};\n\nexport const LANGUAGES = [\n  'Brazilian Portuguese',\n  'Danish',\n  'Dutch',\n  'English',\n  'English_Australian',\n  'English_CA',\n  'English_UK',\n  'Finnish',\n  'French',\n  'French_CA',\n  'German',\n  'Greek',\n  'Indonesian',\n  'Italian',\n  'Japanese',\n  'Korean',\n  'Malay',\n  'Norwegian',\n  'Portuguese',\n  'Russian',\n  'Simplified Chinese',\n  'Spanish',\n  'Spanish_MX',\n  'Swedish',\n  'Thai',\n  'Traditional Chinese',\n  'Turkish',\n  'Vietnamese',\n];\n\nexport default class IOSUploader extends BaseUploader {\n  static validateOptions(options) {\n    if (!LANGUAGES.includes(options.language)) {\n      throw new Error(\n        `You must specify a supported language. Run expo upload:ios --help to see the list of supported languages.`\n      );\n    }\n  }\n\n  constructor(projectDir, options) {\n    super(PLATFORM, projectDir, options);\n  }\n\n  _ensureExperienceIsValid(exp) {\n    if (!_.has(exp, 'ios.bundleIdentifier')) {\n      throw new Error(`You must specify an iOS bundle identifier in app.json.`);\n    }\n  }\n\n  async _getPlatformSpecificOptions() {\n    const appleIdCrentials = await this._getAppleIdCredentials();\n    const appName = await this._getAppName();\n    const otherOptions = _.pick(this.options, ['language', 'sku']);\n    return {\n      ...appleIdCrentials,\n      appName,\n      ...otherOptions,\n    };\n  }\n\n  async _getAppleIdCredentials() {\n    const appleCredsKeys = ['appleId', 'appleIdPassword'];\n    const result = _.pick(this.options, appleCredsKeys);\n\n    if (process.env.EXPO_APPLE_ID) {\n      result.appleId = process.env.EXPO_APPLE_ID;\n    }\n    if (process.env.EXPO_APPLE_ID_PASSWORD) {\n      result.appleIdPassword = process.env.EXPO_APPLE_ID_PASSWORD;\n    }\n\n    const credsPresent = _.intersection(Object.keys(result), appleCredsKeys);\n    if (credsPresent.length !== appleCredsKeys.length) {\n      const questions = APPLE_CREDS_QUESTIONS.filter(({ name }) => !credsPresent.includes(name));\n      const answers = await prompt(questions);\n      return { ...result, answers };\n    } else {\n      return result;\n    }\n  }\n\n  async _getAppName() {\n    const appName = this.options.appName || this._exp.name;\n    if (!appName || appName.length > 30) {\n      if (appName && appName.length > 30) {\n        log.error(APP_NAME_TOO_LONG_MSG);\n      }\n      return await this._askForAppName();\n    } else {\n      return appName;\n    }\n  }\n\n  async _askForAppName() {\n    const { appName } = await prompt(APP_NAME_QUESTION);\n    return appName;\n  }\n\n  async _uploadToTheStore(platformData, buildPath) {\n    const { fastlane } = this;\n    const { appleId, appleIdPassword, appName, language } = platformData;\n    const { bundleIdentifier } = this._exp.ios;\n\n    const appleCreds = { appleId, appleIdPassword };\n\n    log('Ensuring the app exists on App Store Connect, this may take a while...');\n    await runFastlaneAsync(\n      fastlane.app_produce,\n      [bundleIdentifier, appName, appleId, language],\n      appleCreds\n    );\n\n    log('Uploading the app to Testflight, hold tight...');\n    await runFastlaneAsync(fastlane.pilot_upload, [buildPath, appleId], appleCreds, true);\n\n    log(\n      `All done! You may want to go to App Store Connect (${chalk.underline(\n        'https://appstoreconnect.apple.com'\n      )}) and share your build with your testers.`\n    );\n  }\n}\n"],"sourceRoot":"/expo-cli@2.4.0/src"}